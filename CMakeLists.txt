CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(n3ldg_plus CXX)

if(CMAKE_BUILD_TYPE MATCHES debug)
    ADD_DEFINITIONS(-DN3LDG_DEBUG)
    SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -msse3 -std=c++14 -O1" )
elseif(CMAKE_BUILD_TYPE MATCHES profile)
    SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -std=c++14 -O2 -pg -DNDEBUG" )
else()
    SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -fPIC -std=c++14 -Ofast -march=native" )
endif()

INCLUDE_DIRECTORIES(include)
INCLUDE_DIRECTORIES(include/fmt/include)
ADD_SUBDIRECTORY(include/fmt)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus/base n3ldg_plus_src)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus/block n3ldg_plus_src)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus/computation-graph n3ldg_plus_src)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus/loss n3ldg_plus_src)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus/nlp n3ldg_plus_src)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus/operator n3ldg_plus_src)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus/optimizer n3ldg_plus_src)
AUX_SOURCE_DIRECTORY(include/n3ldg-plus n3ldg_plus_src)
ADD_LIBRARY(n3ldg_plus STATIC ${n3ldg_plus_src})
TARGET_LINK_LIBRARIES(n3ldg_plus fmt)
